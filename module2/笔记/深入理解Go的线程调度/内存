linux 对内存的管理其实是对内存页的管理
内存存储的其实是物理内存的地址

linux内存模型
    1. kernel space （内核态）
    2. user space   （用户态）（Goroutine）
        2.1 stack：栈（向下长）
        2.2 未分配内存
        2.3 Heap: 堆（向上长）
        2.4 BSS（未初始化数据）：已声明但未初始化的数据
        2.5 Data（初始化数据）：程序声明并初始化赋值的变量存在此段
        2.6 Text（程序代码段）：程序储存在此段

size 命令 例子：size waitgroup（waitgroup 是一个二进制文件） 可以查看user space相关信息
objdump命令 可以查看二进制文件里面有什么

页表项：虚拟地址和物理地址之间的一个映射关系 （可以有效的让多个进程共享一块物理内存地址，提高内存利用率 如空置内存等）
    四级页表：（有效缩小了整个索引的大小）
        PGD: page global directory （全局目录）
        PUD: page upper directory （上层目录）
        PMD: page middle directory （中层目录）
        PT: page table （物理地址）

页交换，内存交换：允许其中的某一个进程临时把自己的内存交换到硬盘上去

CPU对内存的访问
    CPU上有一个Memory Management Unit(MMU)单元
    CPU把虚拟地址给MMU，MMU去物理内存中查询页表，得到实际的物理地址
    CPU维护一份缓存Translation Lookaside Buffer (TLB)，缓存虚拟地址和物理地址的映射关系（CPU内部储存不需要在物理内存中查找，在CPU内部就处理掉了）

进程切换的开销：
    1. 不同进程的页表项不一样，切换页表全局目录会有开销
    2. 切换内核态堆栈
    3. 切换硬件上下文
    4. 刷新TLB
    5. 系统调度器的代码执行

    6. CPU缓存失效导致CPU访问物理地址的效率下降，IO过程的操作变多

线程切换开销：
    如果非同一进程的线程切换，开销同进程切换相同
    如果为在某进程内部的线程切换，基本没有开销

